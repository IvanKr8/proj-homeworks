package main

import "fmt"

type strring string

func typeTest(a strring) {
	fmt.Printf("%s", a)
}

func calculator(num1, num2 int) int {
	return num1 + num2
}

func main() {
	var (
		stringstr string
		integer   int
		float     float64
		hasBool   bool
	)
	fmt.Printf("%s %d %f %t \n", stringstr, integer, float, hasBool)

	// –ë—ñ–æ–≥—Ä–∞—Ñ—ñ—è
	age := 15
	firstname := "–Ü–≤–∞–Ω"
	lastname := "–ö—Ä–∞–π—á"
	description := "3 —Ä–æ–∫–∏ –≤—á–∏–≤ front-end. –ü–æ—á–∏–Ω–∞—é –≤—á–∏—Ç–∏ back.\n–ü–æ—á–∞–≤ –≤—á–∏—Ç–∏ back –∑ –ø–∞–π—Ç–æ–Ω—É.\nGolang –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è —Å–≤–æ—î—é —à–≤–∏–¥–∫—ñ—Å—Ç—å—é, –∑–∞—Ö–∏—Å—Ç–æ–º, —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º —ñ —Ç–¥.\n"
	stack := "HTML, CSS, Java Script, React.js, Bootstrap, jQuery"
	fmt.Printf("–ú–æ—è –±—ñ–æ–≥—Ä–∞—Ñ—ñ—èüòÄ\n\n")
	fmt.Printf("–ú–µ–Ω–µ –∑–≤–∞—Ç–∏ %s %s, —è –º–∞—é %d\n", firstname, lastname, age)
	fmt.Printf("%s\n", description)
	fmt.Printf("–ú—ñ–π —Å—Ç–µ–∫ –≤ —Ñ—Ä–æ–Ω—Ç—ñ: %s\n\n", stack)

	// –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ–¥–∞–≤–∞–Ω–Ω—è
	int1 := 19
	int2 := 5
	fmt.Println(calculator(int1, int2))
}
